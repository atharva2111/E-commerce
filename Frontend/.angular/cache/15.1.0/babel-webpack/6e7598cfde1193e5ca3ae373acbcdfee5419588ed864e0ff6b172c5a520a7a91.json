{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SellerDashboardComponent = class SellerDashboardComponent {\n  constructor(route, router, myProducts, loginService, jwtHelper) {\n    this.route = route;\n    this.router = router;\n    this.myProducts = myProducts;\n    this.loginService = loginService;\n    this.jwtHelper = jwtHelper;\n    this.products = [];\n    this.endpoint = \"sellers\";\n    this.sellername = \"\";\n  }\n  ngOnInit() {\n    const routeParams = this.route.snapshot.paramMap;\n    const FromRoute = String(routeParams.get('sellername'));\n    this.sellername = FromRoute;\n    this.myProducts.getMyProducts(this.endpoint + \"/\" + FromRoute).subscribe(seller => {\n      this.products = seller.products;\n    });\n  }\n  addProducts() {\n    this.router.navigate(['/sellers/addProducts', this.sellername]);\n  }\n  removeProduct(name) {\n    this.myProducts.removeProduct(\"products\" + \"/\" + name).subscribe(res => {\n      window.location.reload();\n    });\n  }\n  updateProduct(product) {\n    this.myProducts.updateProduct('product', product).subscribe(res => {});\n  }\n};\nSellerDashboardComponent = __decorate([Component({\n  selector: 'app-seller-dashboard',\n  templateUrl: './seller-dashboard.component.html',\n  styleUrls: ['./seller-dashboard.component.css']\n})], SellerDashboardComponent);\nexport { SellerDashboardComponent };","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAEnCC,YAAoBC,KAAqB,EAC/BC,MAAa,EACbC,UAA2B,EAC3BC,YAA6B,EAC7BC,SAA0B;IAJhB,UAAK,GAALJ,KAAK;IACf,WAAM,GAANC,MAAM;IACN,eAAU,GAAVC,UAAU;IACV,iBAAY,GAAZC,YAAY;IACZ,cAAS,GAATC,SAAS;IALnB,aAAQ,GAAW,EAAE;IAOrB,aAAQ,GAAQ,SAAS;IACzB,eAAU,GAAQ,EAAE;EAFjB;EAGHC,QAAQ;IAEN,MAAMC,WAAW,GAAG,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,QAAQ;IAChD,MAAMC,SAAS,GAAGC,MAAM,CAACJ,WAAW,CAACK,GAAG,CAAC,YAAY,CAAC,CAAC;IACvD,IAAI,CAACC,UAAU,GAACH,SAAS;IAEzB,IAAI,CAACP,UAAU,CAACW,aAAa,CAAC,IAAI,CAACC,QAAQ,GAAC,GAAG,GAACL,SAAS,CAAC,CAACM,SAAS,CAACC,MAAM,IAAE;MAC3E,IAAI,CAACC,QAAQ,GAACD,MAAM,CAACC,QAAQ;IAC/B,CAAC,CAAC;EAEJ;EACAC,WAAW;IACT,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,sBAAsB,EAAC,IAAI,CAACP,UAAU,CAAC,CAAC;EAChE;EACAQ,aAAa,CAACC,IAAW;IACvB,IAAI,CAACnB,UAAU,CAACkB,aAAa,CAAC,UAAU,GAAC,GAAG,GAACC,IAAI,CAAC,CAACN,SAAS,CAACO,GAAG,IAAE;MAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAAA,CAAC,CAAC;EAC/F;EACAC,aAAa,CAACC,OAAe;IAC3B,IAAI,CAACzB,UAAU,CAACwB,aAAa,CAAC,SAAS,EAACC,OAAO,CAAC,CAACZ,SAAS,CAACO,GAAG,IAAE,CAAC,CAAC,CAAC;EACrE;CAID;AAjCYxB,wBAAwB,eALpCD,SAAS,CAAC;EACT+B,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,GACWhC,wBAAwB,CAiCpC;SAjCYA,wBAAwB","names":["Component","SellerDashboardComponent","constructor","route","router","myProducts","loginService","jwtHelper","ngOnInit","routeParams","snapshot","paramMap","FromRoute","String","get","sellername","getMyProducts","endpoint","subscribe","seller","products","addProducts","navigate","removeProduct","name","res","window","location","reload","updateProduct","product","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\POC _ E_COMMERCE\\E_COMMERCE\\code\\Frontend\\src\\app\\seller\\seller-dashboard\\seller-dashboard.component.ts"],"sourcesContent":["import { UserLoginService } from 'src/app/user-login.service';\nimport { Product } from './../../products';\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router'\nimport { myProductService } from '../my-products.service';\n\n\n@Component({\n  selector: 'app-seller-dashboard',\n  templateUrl: './seller-dashboard.component.html',\n  styleUrls: ['./seller-dashboard.component.css']\n})\nexport class SellerDashboardComponent implements OnInit{\n  products:Product[]=[]\n  constructor(private route: ActivatedRoute,\n    private router:Router,\n    private myProducts:myProductService,\n    private loginService:UserLoginService,\n    private jwtHelper:JwtHelperService)\n    {}\n  endpoint:string=\"sellers\"\n  sellername:string=\"\"\n  ngOnInit() {\n    \n    const routeParams = this.route.snapshot.paramMap;\n    const FromRoute = String(routeParams.get('sellername'));\n    this.sellername=FromRoute;\n    \n    this.myProducts.getMyProducts(this.endpoint+\"/\"+FromRoute).subscribe(seller=>{\n      this.products=seller.products;\n    })\n    \n  }\n  addProducts(){\n    this.router.navigate(['/sellers/addProducts',this.sellername])\n  }\n  removeProduct(name:string){\n    this.myProducts.removeProduct(\"products\"+\"/\"+name).subscribe(res=>{window.location.reload()}) \n  }\n  updateProduct(product:Product){\n    this.myProducts.updateProduct('product',product).subscribe(res=>{})\n  }\n\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}