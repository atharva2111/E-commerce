{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/user-login.service\";\nexport class SellerLoginComponent {\n  constructor(formBuilder, router, login) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.login = login;\n    this.token = \"\";\n    this.form = new FormData();\n    this.LoginForm = this.formBuilder.group({\n      username: '',\n      password: ''\n    });\n  }\n  onSubmit() {\n    this.form = this.LoginForm.getRawValue();\n    //console.log(this.form)\n    this.login.verifyLogin(this.form, 'seller/login').subscribe(JWtoken => {\n      this.token = JWtoken;\n      this.decoded = jwt_decode(this.token.access_token);\n    });\n    this.user = this.LoginForm.value;\n    //console.log(this.token);\n    //console.log(this.decoded);\n    if (this.decoded.sub == this.user.username) {\n      this.router.navigate(['sellers', this.user.username]);\n      this.login.LoginSuccess(true);\n      this.TopBarComponent.ngOnInit();\n    }\n    window.alert(\"wrong password or username\");\n    this.login.LoginSuccess(false);\n    this.router.navigate([\"seller/login\"]);\n  }\n  ngOnInit() {}\n}\nSellerLoginComponent.ɵfac = function SellerLoginComponent_Factory(t) {\n  return new (t || SellerLoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserLoginService));\n};\nSellerLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SellerLoginComponent,\n  selectors: [[\"app-seller-login\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[1, \"center\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"inputUserName\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"formControlName\", \"username\", 1, \"form-control\"], [\"for\", \"inputPassword\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"button\"]],\n  template: function SellerLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"h2\");\n      i0.ɵɵtext(3, \"Login Credentials\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function SellerLoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 2);\n      i0.ɵɵtext(7, \"UserName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\", 4);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 6);\n      i0.ɵɵtext(14, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.LoginForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAQA,OAAOA,UAAU,MAAM,YAAY;;;;;AAMnC,OAAM,MAAOC,oBAAoB;EAM/BC,YACUC,WAAwB,EACxBC,MAAa,EACbC,KAAsB;IAFtB,gBAAW,GAAXF,WAAW;IACX,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IANP,UAAK,GAAM,EAAE;IAcrB,SAAI,GAAC,IAAIC,QAAQ,EAAE;IANf,IAAI,CAACC,SAAS,GAAC,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACpCC,QAAQ,EAAC,EAAE;MACXC,QAAQ,EAAC;KACV,CAAC;EACJ;EAKFC,QAAQ;IAEN,IAAI,CAACC,IAAI,GAAC,IAAI,CAACL,SAAS,CAACM,WAAW,EAAE;IACtC;IACA,IAAI,CAACR,KAAK,CAACS,WAAW,CAAC,IAAI,CAACF,IAAI,EAAC,cAAc,CAAC,CAACG,SAAS,CAACC,OAAO,IAAE;MAClE,IAAI,CAACC,KAAK,GAACD,OAAO;MAElB,IAAI,CAACE,OAAO,GAAElB,UAAU,CAAC,IAAI,CAACiB,KAAK,CAACE,YAAY,CAAC;IACnD,CAAC,CAAC;IAEF,IAAI,CAACC,IAAI,GAAC,IAAI,CAACb,SAAS,CAACc,KAAK;IAC9B;IACA;IAEA,IAAI,IAAI,CAACH,OAAO,CAACI,GAAG,IAAE,IAAI,CAACF,IAAI,CAACX,QAAQ,EAAC;MACvC,IAAI,CAACL,MAAM,CAACmB,QAAQ,CAAC,CAAC,SAAS,EAAC,IAAI,CAACH,IAAI,CAACX,QAAQ,CAAC,CAAC;MACpD,IAAI,CAACJ,KAAK,CAACmB,YAAY,CAAC,IAAI,CAAC;MAC7B,IAAI,CAACC,eAAe,CAACC,QAAQ,EAAE;;IAEjCC,MAAM,CAACC,KAAK,CAAC,4BAA4B,CAAC;IAC1C,IAAI,CAACvB,KAAK,CAACmB,YAAY,CAAC,KAAK,CAAC;IAC9B,IAAI,CAACpB,MAAM,CAACmB,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;EAGxC;EAEAG,QAAQ,IAER;;AAhDWzB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbjCC,8BAAoB;MACVA,iCAAiB;MAAAA,iBAAK;MAEhCA,+BAAsD;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACnDD,2BAAK;MACwBA,wBAAQ;MAAAA,iBAAQ;MAC3CA,2BAMO;MACTA,iBAAM;MACNA,2BAAK;MACwBA,yBAAQ;MAAAA,iBAAQ;MAC3CA,4BAMO;MACTA,iBAAM;MACNA,kCAAqC;MAAAA,sBAAK;MAAAA,iBAAS;;;MArB/CA,eAAuB;MAAvBA,yCAAuB","names":["jwt_decode","SellerLoginComponent","constructor","formBuilder","router","login","FormData","LoginForm","group","username","password","onSubmit","form","getRawValue","verifyLogin","subscribe","JWtoken","token","decoded","access_token","user","value","sub","navigate","LoginSuccess","TopBarComponent","ngOnInit","window","alert","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\POC _ E_COMMERCE\\E_COMMERCE\\code\\Frontend\\src\\app\\seller\\seller-login\\seller-login.component.ts","D:\\POC _ E_COMMERCE\\E_COMMERCE\\code\\Frontend\\src\\app\\seller\\seller-login\\seller-login.component.html"],"sourcesContent":["\nimport { TopBarComponent } from './../../top-bar/top-bar.component';\nimport { User } from './../../User';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { UserLoginService } from 'src/app/user-login.service';\n\nimport jwt_decode from 'jwt-decode';\n@Component({\n  selector: 'app-seller-login',\n  templateUrl: './seller-login.component.html',\n  styleUrls: ['./seller-login.component.css']\n})\nexport class SellerLoginComponent implements OnInit{\n  LoginForm !: FormGroup;\n  \n  private token:any =\"\"\n  private decoded:any\n  TopBarComponent: any;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router:Router,\n    private login:UserLoginService,\n    ){\n      this.LoginForm=this.formBuilder.group({\n        username:'',\n        password:''\n      })\n    }\n  user!:User\n  form=new FormData();\n\n  \n  onSubmit(){\n    \n    this.form=this.LoginForm.getRawValue();\n    //console.log(this.form)\n    this.login.verifyLogin(this.form,'seller/login').subscribe(JWtoken=> {\n      this.token=JWtoken;\n      \n      this.decoded= jwt_decode(this.token.access_token);  \n    })\n   \n    this.user=this.LoginForm.value\n    //console.log(this.token);\n    //console.log(this.decoded);\n    \n    if (this.decoded.sub==this.user.username){\n      this.router.navigate(['sellers',this.user.username])\n      this.login.LoginSuccess(true); \n      this.TopBarComponent.ngOnInit();     \n    }\n    window.alert(\"wrong password or username\")\n    this.login.LoginSuccess(false);\n    this.router.navigate([\"seller/login\"])\n\n\n  }\n  \n  ngOnInit() {\n    \n  }\n}\n","\r\n<div class=\"center\">\r\n<div ><h2>Login Credentials</h2></div>\r\n    \r\n<form [formGroup]=\"LoginForm\" (ngSubmit)=\"onSubmit()\">        \r\n  <div>  \r\n    <label for=\"inputUserName\">UserName</label>\r\n    <input class=\"form-control\" type=\"text\" \r\n            \r\n            placeholder=\"Username\"\r\n            \r\n            formControlName=\"username\"\r\n            \r\n          >\r\n  </div>\r\n  <div>\r\n    <label for=\"inputPassword\">Password</label>\r\n    <input class=\"form-control\" type=\"password\" \r\n            \r\n            placeholder=\"Password\"\r\n            \r\n            formControlName=\"password\"\r\n            \r\n          >\r\n  </div>\r\n  <button class=\"button\" type=\"submit\">Login</button>\r\n  </form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}