{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n//import { EventEmitter } from 'stream';\nexport class UserLoginService {\n  //headers.append('Content-Type', 'application/json');\n  constructor(http) {\n    this.http = http;\n    this.fire = new EventEmitter();\n    this.baseUrl = 'http://127.0.0.1:8000/';\n    this.headers = new HttpHeaders().set('Content-Type', 'application/json');\n  }\n  verifyLogin(form_data, endpoint) {\n    return this.http.post(this.baseUrl + endpoint, form_data, {\n      headers: this.headers\n    });\n  }\n  LoginSuccess(login) {\n    this.fire.emit(login);\n  }\n  getEmittedvalue() {\n    return this.fire;\n  }\n  isTokenExpired(token) {\n    const expiry = JSON.parse(atob(token.split('.')[1])).exp;\n    return expiry * 1000 > Date.now();\n  }\n}\nUserLoginService.ɵfac = function UserLoginService_Factory(t) {\n  return new (t || UserLoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserLoginService,\n  factory: UserLoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,YAAY,QAAoB,eAAe;AACpE,SAAqBC,WAAW,QAAQ,sBAAsB;;;AAC9D;AAIA,OAAM,MAAOC,gBAAgB;EAK3B;EACAC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IALd,SAAI,GAAmB,IAAIJ,YAAY,EAAE;IAE3C,YAAO,GAAG,wBAAwB;IAClC,YAAO,GAAG,IAAIC,WAAW,EAAE,CAACI,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAEpC;EAEvCC,WAAW,CAACC,SAAkB,EAACC,QAAe;IAC5C,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,IAAI,CAACC,OAAO,GAACF,QAAQ,EAACD,SAAS,EAAC;MAACI,OAAO,EAAC,IAAI,CAACA;IAAO,CAAC,CAAC;EAC/E;EACAC,YAAY,CAACC,KAAa;IACxB,IAAI,CAACC,IAAI,CAACC,IAAI,CAACF,KAAK,CAAC;EACvB;EACAG,eAAe;IACb,OAAO,IAAI,CAACF,IAAI;EAClB;EACAG,cAAc,CAACC,KAAa;IAC1B,MAAMC,MAAM,GAAIC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAEC,GAAG;IAC1D,OAAOL,MAAM,GAAG,IAAI,GAAGM,IAAI,CAACC,GAAG,EAAE;EACnC;;AApBWxB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAyB,SAAhBzB,gBAAgB;EAAA0B,YAFf;AAAM","names":["EventEmitter","HttpHeaders","UserLoginService","constructor","http","set","verifyLogin","form_data","endpoint","post","baseUrl","headers","LoginSuccess","login","fire","emit","getEmittedvalue","isTokenExpired","token","expiry","JSON","parse","atob","split","exp","Date","now","factory","providedIn"],"sourceRoot":"","sources":["D:\\POC _ E_COMMERCE\\E_COMMERCE\\code\\Frontend\\src\\app\\user-login.service.ts"],"sourcesContent":["import { Observable } from 'rxjs';\nimport { User } from './User';\nimport { Injectable ,EventEmitter,Input,Output} from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n//import { EventEmitter } from 'stream';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserLoginService {\n  @Output() fire:EventEmitter<any>=new EventEmitter();\n\n  private baseUrl = 'http://127.0.0.1:8000/';\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\n  //headers.append('Content-Type', 'application/json');\n  constructor(private http:HttpClient) { }\n\n  verifyLogin(form_data:FormData,endpoint:string){\n    return this.http.post(this.baseUrl+endpoint,form_data,{headers:this.headers})\n  }\n  LoginSuccess(login:boolean){\n    this.fire.emit(login);\n  }\n  getEmittedvalue(){\n    return this.fire;\n  }\n  isTokenExpired(token: string) {\n    const expiry = (JSON.parse(atob(token.split('.')[1]))).exp;\n    return expiry * 1000 > Date.now();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}