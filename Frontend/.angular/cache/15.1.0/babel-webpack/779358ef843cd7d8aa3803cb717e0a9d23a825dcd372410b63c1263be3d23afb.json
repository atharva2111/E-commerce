{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../registration.service\";\nimport * as i4 from \"@angular/common\";\nfunction RegistrationComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const usertype_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", usertype_r1.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(usertype_r1.type);\n  }\n}\nexport class RegistrationComponent {\n  constructor(formBuilder, router, regService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.regService = regService;\n    this.usertypes = [{\n      id: 1,\n      type: 'seller'\n    }, {\n      id: 2,\n      type: 'buyer'\n    }];\n    this.Register = this.formBuilder.group({\n      username: '',\n      email: '',\n      password: '',\n      usertype: ''\n    });\n  }\n  register() {\n    console.log(this.Register.getRawValue());\n    this.regService.registerUser(this.Register.getRawValue()).subscribe(res => {});\n    window.alert(\"user registered successfully\");\n    this.router.navigate(['/']);\n  }\n}\nRegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RegistrationService));\n};\nRegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationComponent,\n  selectors: [[\"app-registration\"]],\n  decls: 25,\n  vars: 2,\n  consts: [[1, \"center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"inputUsername\"], [\"type\", \"text\", \"placeholder\", \"username - should be unique\", \"formControlName\", \"username\", 1, \"form-control\"], [\"for\", \"inputEmail\"], [\"type\", \"text\", \"placeholder\", \"E-mail id\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"inputPassword\"], [\"type\", \"text\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"formControlName\", \"usertype\", \"id\", \"type\", 1, \"select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"button\"], [3, \"value\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"br\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\")(3, \"h2\");\n      i0.ɵɵtext(4, \"Register New User\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 3);\n      i0.ɵɵtext(8, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 5);\n      i0.ɵɵtext(12, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\", 7);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 2)(19, \"select\", 9);\n      i0.ɵɵtemplate(20, RegistrationComponent_option_20_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"button\", 11);\n      i0.ɵɵtext(22, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"br\")(24, \"br\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.Register);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.usertypes);\n    }\n  },\n  dependencies: [i4.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".select[_ngcontent-%COMP%]{\\r\\n    font-size:35px;\\r\\n    margin:5px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLFVBQVU7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5zZWxlY3R7XHJcbiAgICBmb250LXNpemU6MzVweDtcclxuICAgIG1hcmdpbjo1cHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAqCgBA,kCAAkE;IAAAA,YAAiB;IAAAA,iBAAS;;;;IAAlDA,wCAAuB;IAACA,eAAiB;IAAjBA,sCAAiB;;;AC3BnG,OAAM,MAAOC,qBAAqB;EAKhCC,YACUC,WAAwB,EACxBC,MAAa,EACbC,UAA8B;IAF9B,gBAAW,GAAXF,WAAW;IACX,WAAM,GAANC,MAAM;IACN,eAAU,GAAVC,UAAU;IANpB,cAAS,GAAC,CAAC;MAACC,EAAE,EAAC,CAAC;MAACC,IAAI,EAAC;IAAQ,CAAC,EACnB;MAACD,EAAE,EAAC,CAAC;MAACC,IAAI,EAAC;IAAO,CAAC,CAAC;IAO5B,IAAI,CAACC,QAAQ,GAAC,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACnCC,QAAQ,EAAC,EAAE;MACXC,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAC,EAAE;MACXC,QAAQ,EAAC;KACV,CAAC;EACJ;EAGFC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,QAAQ,CAACS,WAAW,EAAE,CAAC;IACxC,IAAI,CAACZ,UAAU,CAACa,YAAY,CAAC,IAAI,CAACV,QAAQ,CAACS,WAAW,EAAE,CAAC,CAACE,SAAS,CAACC,GAAG,IAAE,CAAC,CAAC,CAAC;IAE5EC,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC;IAC5C,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;;AAzBWtB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVlC5B,qBAAI;MACJA,8BAAoB;MACVA,iCAAiB;MAAAA,iBAAK;MAE5BA,+BAAqD;MAAxBA;QAAA,OAAY6B,cAAU;MAAA,EAAC;MAChD7B,8BAAwB;MACKA,wBAAQ;MAAAA,iBAAQ;MAC3CA,2BAKC;MACHA,iBAAM;MAENA,+BAAwB;MACAA,uBAAM;MAAAA,iBAAQ;MACtCA,4BAKC;MACDA,iBAAM;MAENA,+BAAwB;MACGA,yBAAQ;MAAAA,iBAAQ;MAC3CA,4BAKC;MACDA,iBAAM;MAENA,+BAAwB;MAEhBA,+EAA4F;MAChGA,iBAAS;MAGbA,mCAAqC;MAAAA,yBAAQ;MAAAA,iBAAS;MACtDA,sBAAI;MACNA,iBAAO;;;MAvCHA,eAAsB;MAAtBA,wCAAsB;MAiCaA,gBAAY;MAAZA,uCAAY","names":["i0","RegistrationComponent","constructor","formBuilder","router","regService","id","type","Register","group","username","email","password","usertype","register","console","log","getRawValue","registerUser","subscribe","res","window","alert","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\POC _ E_COMMERCE\\E_COMMERCE\\code\\Frontend\\src\\app\\registration\\registration.component.html","D:\\POC _ E_COMMERCE\\E_COMMERCE\\code\\Frontend\\src\\app\\registration\\registration.component.ts"],"sourcesContent":["<br>\r\n<div class='center'>\r\n<div ><h2>Register New User</h2></div>\r\n\r\n    <form [formGroup]=\"Register\" (ngSubmit)=\"register()\">    \r\n        <div class=\"form-group\">\r\n          <label for=\"inputUsername\">Username</label>\r\n          <input class=\"form-control\" type=\"text\" \r\n            \r\n            placeholder=\"username - should be unique\"\r\n            \r\n            formControlName=\"username\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n        <label for=\"inputEmail\">E-mail</label>\r\n        <input class=\"form-control\" type=\"text\" \r\n           \r\n            placeholder=\"E-mail id\"\r\n            \r\n            formControlName=\"email\"\r\n        >\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n        <label for=\"inputPassword\">Password</label>\r\n        <input class=\"form-control\" type=\"text\" \r\n            \r\n            placeholder=\"Password\"\r\n            \r\n            formControlName=\"password\"\r\n        >\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <select class =\"select\" formControlName=\"usertype\" id=\"type\">\r\n                <option *ngFor=\"let usertype of usertypes\"[value]=\"usertype.type\">{{usertype.type}}</option>\r\n            </select>\r\n        </div>\r\n\r\n        <button class=\"button\" type=\"submit\">Register</button>\r\n        <br><br>\r\n      </form>   \r\n</div>\r\n\r\n\r\n","import { RegistrationService } from './../registration.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent {\n  Register!:FormGroup;\n  usertypes=[{id:1,type:'seller'},\n              {id:2,type:'buyer'}];\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private router:Router,\n    private regService:RegistrationService){\n    \n      this.Register=this.formBuilder.group({\n        username:'',\n        email:'',\n        password:'',\n        usertype:''\n      })\n    }\n  \n\n  register(){\n    console.log(this.Register.getRawValue());\n    this.regService.registerUser(this.Register.getRawValue()).subscribe(res=>{});\n    \n    window.alert(\"user registered successfully\")\n    this.router.navigate(['/']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}