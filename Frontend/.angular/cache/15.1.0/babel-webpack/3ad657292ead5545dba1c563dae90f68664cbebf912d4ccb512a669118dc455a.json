{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../my-products.service\";\nimport * as i3 from \"src/app/user-login.service\";\nimport * as i4 from \"@auth0/angular-jwt\";\nimport * as i5 from \"@angular/common\";\nfunction SellerDashboardComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function SellerDashboardComponent_tr_14_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const product_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeProduct(product_r1.name));\n    });\n    i0.ɵɵtext(7, \"Remove\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\")(9, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function SellerDashboardComponent_tr_14_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const product_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateProduct(product_r1));\n    });\n    i0.ɵɵtext(10, \"Update\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r1.price);\n  }\n}\nexport class SellerDashboardComponent {\n  constructor(route, router, myProducts, loginService, jwtHelper) {\n    this.route = route;\n    this.router = router;\n    this.myProducts = myProducts;\n    this.loginService = loginService;\n    this.jwtHelper = jwtHelper;\n    this.products = [];\n    this.endpoint = \"sellers\";\n    this.sellername = \"\";\n    this.token = \"\";\n  }\n  ngOnInit() {\n    const routeParams = this.route.snapshot.paramMap;\n    const FromRoute = String(routeParams.get('sellername'));\n    this.sellername = FromRoute;\n    this.myProducts.getMyProducts(this.endpoint + \"/\" + FromRoute).subscribe(seller => {\n      this.products = seller.products;\n    });\n  }\n  addProducts() {\n    this.router.navigate(['/sellers/addProducts', this.sellername]);\n  }\n  removeProduct(name) {\n    this.myProducts.removeProduct(\"products\" + \"/\" + name).subscribe(res => {\n      window.location.reload();\n    });\n  }\n  updateProduct(product) {\n    this.myProducts.updateProduct('product', product).subscribe(res => {});\n  }\n}\nSellerDashboardComponent.ɵfac = function SellerDashboardComponent_Factory(t) {\n  return new (t || SellerDashboardComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.myProductService), i0.ɵɵdirectiveInject(i3.UserLoginService), i0.ɵɵdirectiveInject(i4.JwtHelperService));\n};\nSellerDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SellerDashboardComponent,\n  selectors: [[\"app-seller-dashboard\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[1, \"addproducts\"], [3, \"click\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function SellerDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function SellerDashboardComponent_Template_button_click_1_listener() {\n        return ctx.addProducts();\n      });\n      i0.ɵɵtext(2, \"Add New Product\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"h1\");\n      i0.ɵɵtext(4, \"My Products:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"table\", 2)(7, \"thead\")(8, \"tr\")(9, \"th\");\n      i0.ɵɵtext(10, \"Product Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Price\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, SellerDashboardComponent_tr_14_Template, 11, 2, \"tr\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.products);\n    }\n  },\n  dependencies: [i5.NgForOf],\n  styles: [\"table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n    border: 2px solid black;\\r\\n    border-collapse: collapse;\\r\\n    font-size: 35px;\\r\\n    padding: 1px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2VsbGVyL3NlbGxlci1kYXNoYm9hcmQvc2VsbGVyLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUJBQXVCO0lBQ3ZCLHlCQUF5QjtJQUN6QixlQUFlO0lBQ2YsWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlLCB0aCwgdGQge1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgZm9udC1zaXplOiAzNXB4O1xyXG4gICAgcGFkZGluZzogMXB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAeQA,0BAAsC;IAChCA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,oDAA2B;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;IACjEA,0BAAI;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,+CAAsB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IAHxDA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAmB;IAAnBA,sCAAmB;;;ACLjC,OAAM,MAAOC,wBAAwB;EAEnCC,YAAoBC,KAAqB,EAC/BC,MAAa,EACbC,UAA2B,EAC3BC,YAA6B,EAC7BC,SAA0B;IAJhB,UAAK,GAALJ,KAAK;IACf,WAAM,GAANC,MAAM;IACN,eAAU,GAAVC,UAAU;IACV,iBAAY,GAAZC,YAAY;IACZ,cAAS,GAATC,SAAS;IALnB,aAAQ,GAAW,EAAE;IAOrB,aAAQ,GAAQ,SAAS;IACzB,eAAU,GAAQ,EAAE;IACpB,UAAK,GAAC,EAAE;EAHL;EAIHC,QAAQ;IAEN,MAAMC,WAAW,GAAG,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,QAAQ;IAChD,MAAMC,SAAS,GAAGC,MAAM,CAACJ,WAAW,CAACK,GAAG,CAAC,YAAY,CAAC,CAAC;IACvD,IAAI,CAACC,UAAU,GAACH,SAAS;IAEzB,IAAI,CAACP,UAAU,CAACW,aAAa,CAAC,IAAI,CAACC,QAAQ,GAAC,GAAG,GAACL,SAAS,CAAC,CAACM,SAAS,CAACC,MAAM,IAAE;MAC3E,IAAI,CAACC,QAAQ,GAACD,MAAM,CAACC,QAAQ;IAC/B,CAAC,CAAC;EAEJ;EACAC,WAAW;IACT,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,sBAAsB,EAAC,IAAI,CAACP,UAAU,CAAC,CAAC;EAChE;EACAQ,aAAa,CAACC,IAAW;IACvB,IAAI,CAACnB,UAAU,CAACkB,aAAa,CAAC,UAAU,GAAC,GAAG,GAACC,IAAI,CAAC,CAACN,SAAS,CAACO,GAAG,IAAE;MAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAAA,CAAC,CAAC;EAC/F;EACAC,aAAa,CAACC,OAAe;IAC3B,IAAI,CAACzB,UAAU,CAACwB,aAAa,CAAC,SAAS,EAACC,OAAO,CAAC,CAACZ,SAAS,CAACO,GAAG,IAAE,CAAC,CAAC,CAAC;EACrE;;AA9BWxB,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXrCnC,8BAAyB;MACbA;QAAA,OAASoC,iBAAa;MAAA,EAAC;MAACpC,+BAAe;MAAAA,iBAAS;MAG5DA,0BAAI;MAAAA,4BAAY;MAAAA,iBAAK;MACrBA,2BAAK;MAISA,6BAAY;MAAAA,iBAAK;MACrBA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MAGhBA,8BAAO;MACPA,0EAKK;MACLA,iBAAQ;;;MANgBA,gBAAW;MAAXA,sCAAW","names":["i0","SellerDashboardComponent","constructor","route","router","myProducts","loginService","jwtHelper","ngOnInit","routeParams","snapshot","paramMap","FromRoute","String","get","sellername","getMyProducts","endpoint","subscribe","seller","products","addProducts","navigate","removeProduct","name","res","window","location","reload","updateProduct","product","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\POC _ E_COMMERCE\\E_COMMERCE\\code\\Frontend\\src\\app\\seller\\seller-dashboard\\seller-dashboard.component.html","D:\\POC _ E_COMMERCE\\E_COMMERCE\\code\\Frontend\\src\\app\\seller\\seller-dashboard\\seller-dashboard.component.ts"],"sourcesContent":["\n<div class='addproducts'>\n    <button (click)=\"addProducts()\">Add New Product</button>\n</div>\n\n<h1>My Products:</h1> \n<div>\n    <table class=\"table table-striped\">\n        <thead>\n        <tr>\n          <th>Product Name</th>\n          <th>Price</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let product of products \">\n          <td>{{ product.name }}</td>\n          <td>{{product.price  }}</td>\n          <td><button (click)=\"removeProduct(product.name)\">Remove</button></td>\n          <td><button (click)=\"updateProduct(product)\">Update</button></td>\n        </tr>\n        </tbody>\n      </table>\n    </div>","import { UserLoginService } from 'src/app/user-login.service';\nimport { Product } from './../../products';\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router'\nimport { myProductService } from '../my-products.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-seller-dashboard',\n  templateUrl: './seller-dashboard.component.html',\n  styleUrls: ['./seller-dashboard.component.css']\n})\nexport class SellerDashboardComponent implements OnInit{\n  products:Product[]=[]\n  constructor(private route: ActivatedRoute,\n    private router:Router,\n    private myProducts:myProductService,\n    private loginService:UserLoginService,\n    private jwtHelper:JwtHelperService)\n    {}\n  endpoint:string=\"sellers\"\n  sellername:string=\"\"\n  token=\"\";\n  ngOnInit() {\n    \n    const routeParams = this.route.snapshot.paramMap;\n    const FromRoute = String(routeParams.get('sellername'));\n    this.sellername=FromRoute;\n    \n    this.myProducts.getMyProducts(this.endpoint+\"/\"+FromRoute).subscribe(seller=>{\n      this.products=seller.products;\n    })\n    \n  }\n  addProducts(){\n    this.router.navigate(['/sellers/addProducts',this.sellername])\n  }\n  removeProduct(name:string){\n    this.myProducts.removeProduct(\"products\"+\"/\"+name).subscribe(res=>{window.location.reload()}) \n  }\n  updateProduct(product:Product){\n    this.myProducts.updateProduct('product',product).subscribe(res=>{})\n  }\n\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}