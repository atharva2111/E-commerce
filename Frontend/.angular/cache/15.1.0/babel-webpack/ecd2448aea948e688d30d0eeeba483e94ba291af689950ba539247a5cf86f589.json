{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../my-products.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateProductComponent {\n  constructor(myProduct, route) {\n    this.myProduct = myProduct;\n    this.route = route;\n    this.productName = '';\n    this.routeParams = this.route.snapshot.paramMap;\n    this.FromRoute = String(this.routeParams.get('productname'));\n  }\n  ngOnInit() {\n    this.routeParams = this.route.snapshot.paramMap;\n    this.FromRoute = String(this.routeParams.get('productname'));\n  }\n  updateName() {\n    this.product.name = this.productName;\n    this.myProduct.updateProduct('product/' + this.FromRoute, this.product).subscribe(res => {});\n  }\n  updatePrice() {\n    this.product.price = this.price;\n    this.myProduct.updateProduct('product/' + this.FromRoute, this.product).subscribe(res => {});\n  }\n  updateDesc() {\n    this.product.description = this.description;\n    this.myProduct.updateProduct('product/' + this.FromRoute, this.product).subscribe(res => {});\n  }\n}\nUpdateProductComponent.ɵfac = function UpdateProductComponent_Factory(t) {\n  return new (t || UpdateProductComponent)(i0.ɵɵdirectiveInject(i1.myProductService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nUpdateProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateProductComponent,\n  selectors: [[\"app-update-product\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"name\", \"placeholder\", \"Updated Name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"type\", \"number\", \"placeholder\", \"Updated Price\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"type\", \"text\", \"placeholder\", \"Updated description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function UpdateProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateProductComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.updateName();\n      });\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateProductComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.productName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵtext(3, \"Update Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\")(5, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateProductComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.price = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function UpdateProductComponent_Template_button_click_6_listener() {\n        return ctx.updatePrice();\n      });\n      i0.ɵɵtext(7, \"Update Price\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\")(9, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateProductComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function UpdateProductComponent_Template_button_click_10_listener() {\n        return ctx.updateDesc();\n      });\n      i0.ɵɵtext(11, \"Update Description\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.productName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.price);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.description);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,sBAAsB;EAcjCC,YAAoBC,SAA0B,EACpCC,KAAoB;IADV,cAAS,GAATD,SAAS;IACnB,UAAK,GAALC,KAAK;IAbf,gBAAW,GAAQ,EAAE;IAIb,gBAAW,GAAG,IAAI,CAACA,KAAK,CAACC,QAAQ,CAACC,QAAQ;IAC1C,cAAS,GAAGC,MAAM,CAAC,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,aAAa,CAAC,CAAC;EAQ7B;EANlCC,QAAQ;IACN,IAAI,CAACF,WAAW,GAAC,IAAI,CAACJ,KAAK,CAACC,QAAQ,CAACC,QAAQ;IAC7C,IAAI,CAACK,SAAS,GAACJ,MAAM,CAAC,IAAI,CAACC,WAAW,CAACC,GAAG,CAAC,aAAa,CAAC,CAAC;EAE5D;EAKAG,UAAU;IACR,IAAI,CAACC,OAAO,CAACC,IAAI,GAAC,IAAI,CAACC,WAAW;IAClC,IAAI,CAACZ,SAAS,CAACa,aAAa,CAAC,UAAU,GAAC,IAAI,CAACL,SAAS,EAAC,IAAI,CAACE,OAAO,CAAC,CAACI,SAAS,CAACC,GAAG,IAAE,CAAC,CAAC,CAAC;EACzF;EACAC,WAAW;IACT,IAAI,CAACN,OAAO,CAACO,KAAK,GAAC,IAAI,CAACA,KAAK;IAC7B,IAAI,CAACjB,SAAS,CAACa,aAAa,CAAC,UAAU,GAAC,IAAI,CAACL,SAAS,EAAC,IAAI,CAACE,OAAO,CAAC,CAACI,SAAS,CAACC,GAAG,IAAE,CAAC,CAAC,CAAC;EACzF;EACAG,UAAU;IACR,IAAI,CAACR,OAAO,CAACS,WAAW,GAAC,IAAI,CAACA,WAAW;IACzC,IAAI,CAACnB,SAAS,CAACa,aAAa,CAAC,UAAU,GAAC,IAAI,CAACL,SAAS,EAAC,IAAI,CAACE,OAAO,CAAC,CAACI,SAAS,CAACC,GAAG,IAAE,CAAC,CAAC,CAAC;EACzF;;AA7BWjB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVnCC,+BAAiC;MAA3BA;QAAA,OAAYC,gBAAY;MAAA,EAAC;MAC/BD,gCAAyG;MAArDA;QAAA;MAAA,EAAyB;MAA7EA,iBAAyG;MACzGA,iCAAsB;MAAAA,2BAAW;MAAAA,iBAAS;MAG1CA,2BAAK;MACuCA;QAAA;MAAA,EAAmB;MAA7DA,iBAA0F;MAC1FA,iCAAgC;MAAxBA;QAAA,OAASC,iBAAa;MAAA,EAAC;MAACD,4BAAY;MAAAA,iBAAS;MAGvDA,2BAAK;MACqCA;QAAA;MAAA,EAAyB;MAAjEA,iBAAoG;MACpGA,kCAA+B;MAAvBA;QAAA,OAASC,gBAAY;MAAA,EAAC;MAACD,mCAAkB;MAAAA,iBAAS;;;MAXRA,eAAyB;MAAzBA,yCAAyB;MAKjCA,eAAmB;MAAnBA,mCAAmB;MAKrBA,eAAyB;MAAzBA,yCAAyB","names":["UpdateProductComponent","constructor","myProduct","route","snapshot","paramMap","String","routeParams","get","ngOnInit","FromRoute","updateName","product","name","productName","updateProduct","subscribe","res","updatePrice","price","updateDesc","description","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\POC _ E_COMMERCE\\E_COMMERCE\\code\\Frontend\\src\\app\\seller\\update-product\\update-product.component.ts","D:\\POC _ E_COMMERCE\\E_COMMERCE\\code\\Frontend\\src\\app\\seller\\update-product\\update-product.component.html"],"sourcesContent":["import { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { myProductService } from './../my-products.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Product } from 'src/app/products';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.css']\n})\nexport class UpdateProductComponent implements OnInit {\n  product!:Product;\n  productName:string='';\n  price:any;\n  description:any;\n\n  private routeParams = this.route.snapshot.paramMap;\n  private FromRoute = String(this.routeParams.get('productname'));\n\n  ngOnInit(): void {\n    this.routeParams=this.route.snapshot.paramMap;\n    this.FromRoute=String(this.routeParams.get('productname'));\n    \n  }\n  constructor(private myProduct:myProductService,\n    private route:ActivatedRoute){  }\n\n  \n  updateName(){\n    this.product.name=this.productName;\n    this.myProduct.updateProduct('product/'+this.FromRoute,this.product).subscribe(res=>{});\n  }\n  updatePrice(){\n    this.product.price=this.price;\n    this.myProduct.updateProduct('product/'+this.FromRoute,this.product).subscribe(res=>{});\n  }\n  updateDesc(){\n    this.product.description=this.description;\n    this.myProduct.updateProduct('product/'+this.FromRoute,this.product).subscribe(res=>{});\n  }\n}\n","\n<form (ngSubmit)=\"updateName()\" >\n<input class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"productName\" placeholder=\"Updated Name\">\n<button type=\"submit\">Update Name</button>\n</form>\n\n<div>\n  <input class=\"form-control\" type=\"number\" [(ngModel)]=\"price\" placeholder=\"Updated Price\">\n  <button (click)=\"updatePrice()\">Update Price</button>\n</div>\n\n<div>\n  <input class=\"form-control\" type=\"text\" [(ngModel)]=\"description\" placeholder=\"Updated description\">\n  <button (click)=\"updateDesc()\">Update Description</button>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}